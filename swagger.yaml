swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Accounts
      description: API for fetching user accounts
      produces:
        - application/json
      responses:
        "200":
          description: User accounts retrieved successfully
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                total:
                  type: number
                name:
                  type: string
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/account/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Account by ID
      description: API for fetching user account details by ID
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the user account
          required: true
      responses:
        "200":
          description: User account details retrieved successfully
          schema:
            type: object
            properties:
              id:
                type: string
              total:
                type: number
              name:
                type: string
              transactions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    date:
                      type: string
                      format: date-time
                    description:
                      type: string
                    amount:
                      type: number
                    balance:
                      type: number
                    transactionType:
                      type: string
                    category:
                      type: string
                    note:
                      type: string
        "401":
          description: Unauthorized
        "404":
          description: User account not found
        "500":
          description: Internal Server Error
  /user/transactions/month:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get Current Month Transactions
      description: API for fetching all transactions for the current month
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/account/{id}/transaction/{idTransaction}/category:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction Category
      description: API for updating transaction category
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the user account
          required: true
        - in: path
          name: idTransaction
          type: string
          description: ID of the transaction
          required: true
        - in: body
          name: body
          description: Update transaction category
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                enum: ["food", "cinema", "fuel"]
      produces:
        - application/json
      responses:
        "201":
          description: Transaction category updated successfully
        "401":
          description: Unauthorized
        "404":
          description: User account or transaction not found
        "500":
          description: Internal Server Error
  /user/account/{id}/transaction/{idTransaction}/note:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction Note
      description: API for updating transaction note
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the user account
          required: true
        - in: path
          name: idTransaction
          type: string
          description: ID of the transaction
          required: true
        - in: body
          name: body
          description: Update transaction note
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      produces:
        - application/json
      responses:
        "201":
          description: Transaction note updated successfully
        "401":
          description: Unauthorized
        "404":
          description: User account or transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
      total:
        type: number
      name:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
        enum: ["food", "cinema", "fuel"]
      note:
        type: string
